;(gen-cyclic-group (map 1#(modulo (* %1 2) 5) (between 1 4)))
;{{2 4 1 3} {4 3 2 1} {3 1 4 2} {1 2 3 4}}

(define $z (rtu 5))

(define $a11 (+ z^1 z^4))
(define $a12 (+ z^2 z^3))

(define $b10 (+ a11 a12))
(define $b11 (- a11 a12))
(define $b12 (- a12 a11))

(define $b10' -1);-1
(define $b11' (sqrt (** b11 2)));(sqrt 5)

(define $a11' (/ (+ b10' b11') 2));(/ (+ -1 (sqrt 5)) 2)
(define $a12' (/ (- b10' b11') 2));(/ (+ -1 (* -1 (sqrt 5))) 2)

(define $a21 (- z^1 z^4))
(define $a22 (- z^2 z^3))

(define $b20 (+ a21 a22))
(define $b21 (- a21 a22))
(define $b22 (- a22 a21))

;(define $b20' (sqrt (* -1 b20 b20)));(sqrt (+ (* -3 (rtu 5)^2) 4 (* -3 (rtu 5)^3) (rtu 5)^4 (rtu 5)))
(define $b20' (sqrt (+ -3 (* 4 a12'))))
;(define $b21' (sqrt (* -1 b21 b22)));(sqrt (+ (* -1 (rtu 5)^3) (* 3 (rtu 5)^4) (* -1 (rtu 5)^2) -4 (* 3 (rtu 5))))
(define $b21' (sqrt (+ -3 (* 4 a11'))))

(define $a21' (/ (+ b20' b21') 2))
(define $a22' (/ (- b20' b21') 2))

(define $z1' (/ (+ a11' a21') 2))

z1';(/ (+ -1 (sqrt 5) (sqrt (+ -5 (* -2 (sqrt 5)))) (sqrt (+ -5 (* 2 (sqrt 5))))) 4)

(** (+ (sqrt (+ -5 (* -2 (sqrt 5)))) (sqrt (+ -5 (* 2 (sqrt 5))))) 2)
;(+ -10 (* 2 (sqrt (+ -5 (* -2 (sqrt 5)))) (sqrt (+ -5 (* 2 (sqrt 5))))))

(* (+ -5 (* -2 (sqrt 5))) (+ -5 (* 2 (sqrt 5))));5

; z1' is equal to
(/ (+ -1 (sqrt 5) (sqrt (+ -10 (* -2 (sqrt 5))))) 4)