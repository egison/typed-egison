(define-type-of $b.+ (Fun (Tuple Integer Integer) Integer))
(define-type-of $cons
 (Fun (Tuple (Pattern (TypeVar a)) (Pattern (Collection (TypeVar a)))) 
  (Pattern (Collection (TypeVar a)))))
; (define-type-of $nil (Pattern (Collection a)))
; (define-type-of $Cons (type-fun (type-tuple (type-var a) (type-collection (type-var a))) (type-collection (type-var a))))
; (define-type-of $Nil (type-collection (type-var a)))
; (define $unordered-pair (lambda [$a] (matcher {[<cons $ <cons $ <nil>>> [a a] {[<Cons $x <Cons $y <Nil>>> {[x y] [y x]}]}] [$ [something] {[$tgt {tgt}]}]})))
