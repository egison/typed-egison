(define-type-of $b.+ (Fun (Tuple Integer Integer) Integer))
(define-type-of $b.- (Fun (Tuple Integer Integer) Integer))
(define-type-of $b.* (Fun (Tuple Integer Integer) Integer))
(define-type-of $b./ (Fun (Tuple Integer Integer) Integer))
(define-type-of $eq? (Fun (Tuple (TypeVar a) (TypeVar a)) Bool))
(define-type-of $lt? (Fun (Tuple (TypeVar a) (TypeVar a)) Bool))

;; This PairII is appended for README.md.
(define-ADT PairII <Pair Integer Integer>)
(define $unorderd-pair
 (lambda [$a]
  (matcher {[<pair $ $> [a a]
   {[<Pair $x $y> {[x y] [y x]}]}]
   [$ [something] {[$tgt {tgt}]}]})))
